<Window x:Class="Triangulation.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Triangulation.UI"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Title="MainWindow" Height="720" Width="1200"
        WindowStartupLocation="CenterScreen"
        >
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!--Canvas for drawing triangulation-->
        <Canvas x:Name="Canvas" Background="Cyan"
                    Grid.Column="0"
                    ClipToBounds="True"
                    Width="{Binding CanvasWidth}"
                    Height="{Binding CanvasHeight}"
                    MaxHeight="{Binding CanvasHeight}"
                    MaxWidth="{Binding CanvasWidth}"
                    MinHeight="{Binding CanvasHeight}"
                    MinWidth="{Binding CanvasWidth }"/>

        <!--<local:BoundaryControl  Width="160" Height="60" Grid.Column="2"></local:BoundaryControl>-->

        <!--Stack panal for some options-->
        <StackPanel Grid.Column="2" Orientation="Vertical" Margin="0 0 10 0">
            <!--Grid for zoom-->
            <Grid Width="200" HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!--Label-->
                <Label Content="Zoom:" 
                       Grid.Row="0" 
                       HorizontalAlignment="Right" 
                       HorizontalContentAlignment="Right"/>
                <!--Zoom values-->
                <ComboBox x:Name="cbZoom"
                          SelectedItem="{Binding CurrentZoom}" 
                          Grid.Column="1" 
                          Width="100" 
                          HorizontalAlignment="Right" 
                          ItemsSource="{Binding ZoomValues}">
                    <!--Trigger for event, which execute command-->
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction 
                                Command="{Binding ZoomCommand}"
                                CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>

            <!--Triangulate button-->
            <Button x:Name="Triangulate"  
                    Grid.Column="1" 
                    Margin="0 10 0 0" 
                    Width="100" 
                    Height="24" 
                    HorizontalAlignment="Right"
                    Content="Triangulate">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction
                            Command="{Binding TriangulateCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <!--ShowData button-->
            <Button x:Name="Data" 
                    Grid.Column="1" 
                    Margin="0 10 0 0" 
                    Width="100" 
                    Height="24" 
                    HorizontalAlignment="Right" 
                    Content="Data"
                    Command="{Binding ShowDataCommand}"/>
            <!--ShowAxes-->
            <Grid Width="200" HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!--Label-->
                <Label Grid.Row="0" 
                       HorizontalAlignment="Right" 
                       HorizontalContentAlignment="Right"
                       Content="Show axis"/>
                <!--CheckBox-->
                <CheckBox x:Name="ShowAxis" 
                          Grid.Column="1" 
                          IsChecked="{Binding ShowAxis}" 
                          VerticalAlignment="Center" 
                          HorizontalAlignment="Center">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked Unchecked">
                            <i:InvokeCommandAction
                                Command="{Binding ShowAxis}"
                                CommandParameter="{Binding Path=IsChecked, RelativeSource={RelativeSource AncestorType=CheckBox}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </CheckBox>
            </Grid>
            <!--Moving-->
            <Grid Width="200" HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label HorizontalAlignment="Right" Grid.Row="0" HorizontalContentAlignment="Right">Move:</Label>
                <CheckBox x:Name="IsMove" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="False"></CheckBox>
            </Grid>
            <!--Count of points-->
            <Grid Width="200" HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Count of points:" 
                       HorizontalAlignment="Right" 
                       Grid.Column="0" 
                       HorizontalContentAlignment="Right"/>
                <TextBox x:Name="CountOfPoints" 
                         
                         Grid.Column="1">
                    <Binding Path="NumberOfPoints"
                        UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:NumberOfPointsRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
            </Grid>
            <Button x:Name="Result" 
                     Grid.Column="1"
                     Margin="0 10 0 0"
                     Width="100" 
                     Height="24" 
                     HorizontalAlignment="Right" 
                     Content="Result"
                Command="{Binding ShowResultCommand}" />

        </StackPanel>
    </Grid>
</Window>
